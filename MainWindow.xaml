<Controls:MetroWindow x:Class="WpfStatus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:local="clr-namespace:WpfStatus" d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        mc:Ignorable="d"
        Title="{Binding MainWindowTitle}" Height="600" Width="1120" FontSize="14" FontFamily="Cascadia Code" >
    <Window.Resources>
        <ResourceDictionary>
            <local:BoolToColorConverter x:Key="BoolToColorConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="250" MinHeight="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="50" MinHeight="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*" MinWidth="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="180"/>
        </Grid.ColumnDefinitions>
        <ListView x:Name="List" Margin="10,10,10,10" d:ItemsSource="{d:SampleData ItemCount=5}" ItemsSource="{Binding Nodes}" SelectionChanged="List_SelectionChanged" GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
            <ListView.Resources>
                <Style BasedOn="{StaticResource MahApps.Styles.ListViewItem}" TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsOk}" Value="❌">
                            <Setter Property="Background" Value="DarkRed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsOk}" Value="Offline">
                            <Setter Property="Background" Value="Gray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" Width="100" DisplayMemberBinding="{Binding Name}" />
                    <GridViewColumn Header="Host" Width="90" DisplayMemberBinding="{Binding Host}" />
                    <GridViewColumn Header="Port" Width="50" DisplayMemberBinding="{Binding Port}" />
                    <GridViewColumn Header="Peers" Width="50" DisplayMemberBinding="{Binding Status.ConnectedPeers}" />
                    <GridViewColumn Header="Ok" Width="40" DisplayMemberBinding="{Binding IsOk}" />
                    <GridViewColumn Header="Layer" Width="60" DisplayMemberBinding="{Binding Status.SyncedLayer}" />
                    <GridViewColumn Header="Top" Width="60" DisplayMemberBinding="{Binding Status.TopLayer}" />
                    <GridViewColumn Header="Size" Width="70" DisplayMemberBinding="{Binding PostSetupStatus.SizeInTib}" />
                    <GridViewColumn Header="Dir" Width="50" DisplayMemberBinding="{Binding PostSetupStatus.Opts.DataDir}" />
                    <GridViewColumn Header="Rewards" Width="100" DisplayMemberBinding="{Binding Rewards}" />
                    <GridViewColumn Header="Next" Width="90" DisplayMemberBinding="{Binding TimeToNextReward}" />
                    <GridViewColumn Header="Update" Width="60" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="▶" Click="Update_Click" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Time upd" Width="75" DisplayMemberBinding="{Binding LastUpdatedStr}" />
                </GridView>
            </ListView.View>
        </ListView>
        <GridSplitter Grid.Row="1" Height="4" VerticalAlignment="Center" ShowsPreview="False" />
        <Grid Grid.Row="2">
            <TabControl>
                <TabItem Header="Peers">
                    <DataGrid d:ItemsSource="{d:SampleData ItemCount=5}" ItemsSource="{Binding PeerInfos}"
                              AutoGenerateColumns="False" 
                              IsReadOnly="True"
                              IsManipulationEnabled="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="*" />
                            <DataGridTextColumn Header="Address" Binding="{Binding Connections[0].Address}" Width="*" />
                            <DataGridTextColumn Header="Uptime" Binding="{Binding Connections[0].UptimeSec}" Width="90" TextBlock.TextAlignment="Center">
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridCheckBoxColumn Header="Outbound" Binding="{Binding Connections[0].Outbound}" Width="90" />
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
                <TabItem Header="Events">
                    <DataGrid d:ItemsSource="{d:SampleData ItemCount=5}" ItemsSource="{Binding Events}"
                          AutoGenerateColumns="False" 
                          IsReadOnly="True"
                          IsManipulationEnabled="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Timestamp" Binding="{Binding Timestamp}" Width="110" SortDirection="Descending" />
                            <DataGridTextColumn Header="Detail" Binding="{Binding Detail}" Width="*" />
                            <DataGridTextColumn Header="Help" Binding="{Binding Help}" Width="*" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style>
                                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Grid.Row="3" Grid.ColumnSpan="3">
            <Button Content="Update All" Margin="0,0,10,0" Height="30" VerticalAlignment="Center" Click="UpdateAll_Click" HorizontalAlignment="Right" Width="116"/>
            <ProgressBar Value="{Binding ProgressValue, Mode=OneWay}" Margin="10,0,131,10" Height="10" VerticalAlignment="Bottom"/>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,24" VerticalAlignment="Bottom">
                <CheckBox Content="Auto Update" IsChecked="{Binding IsAutoUpdate}" Margin="0,0,16,0" HorizontalAlignment="Left" Checked="AutoUpdate_Checked" Unchecked="AutoUpdate_Unchecked" />
                <CheckBox Content="Notifications" IsChecked="{Binding IsEnabledNotifications}" Margin="0,0,16,0" HorizontalAlignment="Left"/>
            </StackPanel>
        </Grid>
        <GridSplitter Grid.Column="1" Grid.RowSpan="3" Width="4" HorizontalAlignment="Center" ShowsPreview="False" />
        <ListBox x:Name="ListTimeEvents" Grid.Column="2" Margin="0,0,0,0" Grid.RowSpan="3" ItemsSource="{Binding TimeEvents}" d:ItemsSource="{d:SampleData}" SelectionChanged="ListTimeEvents_SelectionChanged">
            <ListBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Red" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Green" />
            </ListBox.Resources>
            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Yellow" />
                            <Setter Property="Background" Value="Yellow" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Style.Resources>
                        <SolidColorBrush x:Key='{x:Static SystemColors.HighlightBrushKey}' Color='White'/>
                        <SolidColorBrush x:Key='{x:Static SystemColors.HighlightTextBrushKey}' Color='Black'/>
                        <SolidColorBrush x:Key='{x:Static SystemColors.ControlBrushKey}' Color='White'/>
                    </Style.Resources>
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Margin" Value="5,2"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True" >
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="AliceBlue" />
                            <Setter Property="Margin" Value="5,2" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="5,2" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:00.200" Value="10,8,5,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="10,8,5,0" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:00.100" Value="5,2" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <DataTrigger Binding="{Binding EventType}" Value="Here">
                            <Setter Property="Background" Value="#00FFFFFF" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Goldenrod"/>
                            <Setter Property="Margin" Value="10,10"/>
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="CloseReward">
                            <Setter Property="Background" Value="DeepSkyBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="Reward">
                            <Setter Property="Background" Value="SkyBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EventType}" Value="None">
                            <Setter Property="Foreground" Value="Ivory" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RewardVisible}" Value="0">
                            <Setter Property="Background" Value="LightGreen" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RewardStr}" Value="❌">
                            <Setter Property="Background" Value="LightSalmon" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="stackPanel" Margin="0,2,0,2">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding Layer}" FontWeight="Bold" FontSize="17" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding RewardStr}" Margin="10,0,0,0" Padding="5,0" HorizontalAlignment="Right" Background="Green" Foreground="White" VerticalAlignment="Center" Visibility="{Binding RewardVisible}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding Desc}" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding InDays}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Controls:MetroWindow>
